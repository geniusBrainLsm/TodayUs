plugins {
    id 'java'
    id 'org.springframework.boot' version '3.2.0'
    id 'io.spring.dependency-management' version '1.1.4'
}

group = 'com.todayus'
version = '0.0.1-SNAPSHOT'

java {
    sourceCompatibility = '17'
}

configurations {
    compileOnly {
        extendsFrom annotationProcessor
    }
}

repositories {
    mavenCentral()
}

dependencies {
    implementation 'org.springframework.boot:spring-boot-starter-web'
    implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
    implementation 'org.springframework.boot:spring-boot-starter-security'
    implementation 'org.springframework.boot:spring-boot-starter-validation'
    implementation 'org.springframework.boot:spring-boot-starter-oauth2-client'
    implementation 'org.springframework.boot:spring-boot-starter-oauth2-resource-server'
    implementation 'org.springframework.boot:spring-boot-starter-actuator'
    implementation 'org.postgresql:postgresql'
    
    // JWT
    implementation 'io.jsonwebtoken:jjwt-api:0.12.3'
    implementation 'io.jsonwebtoken:jjwt-impl:0.12.3'
    implementation 'io.jsonwebtoken:jjwt-jackson:0.12.3'
    
    // HTTP Client for Kakao API
    implementation 'org.springframework.boot:spring-boot-starter-webflux'
    
    // OpenAI API
    implementation 'com.theokanning.openai-gpt3-java:service:0.18.2'
    
    // .env file support
    implementation 'me.paulschwarz:spring-dotenv:4.0.0'
    
    // AWS S3
    implementation 'software.amazon.awssdk:s3:2.21.29'
    
    compileOnly 'org.projectlombok:lombok'
    annotationProcessor 'org.projectlombok:lombok'
    
    testImplementation 'org.springframework.boot:spring-boot-starter-test'
    testImplementation 'org.springframework.security:spring-security-test'
    testImplementation 'org.testcontainers:junit-jupiter'
    testImplementation 'org.testcontainers:postgresql'
}

tasks.named('test') {
    useJUnitPlatform()
}

// Disable plain JAR because bootJar will be used
jar {
    enabled = false
    archiveClassifier = ''
}

// Configure fat JAR output
tasks.named('bootJar') {
    archiveFileName = 'todayus-backend.jar'
    mainClass = 'com.todayus.TodayUsApplication'
}

// Ensure bootJar runs during build
tasks.named('build') {
    dependsOn 'bootJar'
}

// Ensure UTF-8 encoding for javac
tasks.withType(JavaCompile).configureEach {
    options.encoding = 'UTF-8'
}


